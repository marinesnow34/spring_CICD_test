name: Java CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: branch
        run: |
          echo ${{ github.head_ref }}
          echo ${{ github.base_ref }}
      - name: Checkout source code
        uses: actions/checkout@v3

      # Uncomment these lines if you want to set up JDK and use Gradle to build.
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@842c587ad8aa4c68eeba24c396e15af4c2e9f30a #2.9.0
        with:
          arguments: build
      
      - name: ls
        run: echo $(ls)

      - name: file copy
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build
        

      # This step will always fail; replace it with your actual build step.
      - name: Build
        run: exit 1

  comment:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    if: always() # Ensures this job always runs after 'build'
    steps:
      - name: new Discordbot
        uses: sarisia/actions-status-discord@v1.13.0
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          content: ${{ github.actor == 'marinesnow34' && '<@392607023495118862>' }}
          # nofail: false
        if: always()
      - name: file copy
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      - name: ls
        run: echo $(ls)
      - name: Comment on failure and close PR
        if: needs.build.result == 'failure'
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.token }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '빌드 실패'
            });
            
            github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              state: 'closed'
            });

      - name: Auto approve pull request
        if: needs.build.result == 'success'
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.token }}
          script: |
            github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              event: 'APPROVE'
            });
