name: Java CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
    steps:
      - name: branch
        run: |
          echo ${{ github.head_ref }}
          echo ${{ github.base_ref }}
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: ls
        run: echo $(ls src/main/resources)
        
      - name: Set application.properties from secrets
        run: |
          echo "#PORT=" > src/main/resources/application.properties
          echo "#WDS_SOCKET_PORT=0" >> src/main/resources/application.properties
          echo "#NODE_PATH=src/" >> src/main/resources/application.properties
          echo "#REACT_APP_API_ROOT=" >> src/main/resources/application.properties
          echo "#REACT_APP_HOME_URL=${{ secrets.TEST_REACT_APP_HOME_URL }}" >> src/main/resources/application.properties
      - name: cat application.properties
        run: |
          echo $(cat src/main/resources/application.properties)
      # Uncomment these lines if you want to set up JDK and use Gradle to build.
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        # uses: gradle/gradle-build-action@v2.9.0
        # with:
          # arguments: build
        run: ./gradlew clean build
      - name: Log in to the Container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # 가장 최신 image 에 latest tag 달기
#          flavor: |
#            latest=true
          # Git short commit, use git version tag
          tags: |
            type=sha
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
      - name: rm
        run: rm build/libs/*plain.jar
      - name: ls
        run: echo $(ls)
      - name: ls
        run: echo $(ls build/libs)
      # - name: Build and push Docker image
      #   id: build
      #   uses: docker/build-push-action@v5.0.0
      #   with:
      #     context: .
      #     file: Dockerfile # repository 기준 도커파일 위치
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
      - name: Build and push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/spring_cicd_test:latest      

